version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: asya-postgres
    environment:
      POSTGRES_USER: asya_user
      POSTGRES_PASSWORD: asya_password
      POSTGRES_DB: asya_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U asya_user -d asya_db"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: asya-redis
    ports:
      - "6379:6379"
    healthcheck:
    
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: asya-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://asya_user:asya_password@postgres:5432/asya_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3000
      ALLOWED_ORIGINS: http://localhost:4200,http://localhost:5173
      JWT_SECRET: insecure_dev_secret
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 20

  bot:
    build:
      context: ./bot 
      dockerfile: Dockerfile
    container_name: asya-bot
    environment:
      NESTJS_BACKEND_URL: http://backend:3000
      DATABASE_URL: postgresql://asya_user:asya_password@postgres:5432/asya_db
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./bot:/app
      - /app/venv

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: asya-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - HOSTNAME=0.0.0.0
      - PORT=5173
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    # Убираем health check для фронтенда в режиме разработки
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:5173"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 20

  nginx:
    image: nginx:alpine
    container_name: asya-nginx
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pgdata:
