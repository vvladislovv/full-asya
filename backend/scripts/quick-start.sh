#!/bin/bash

# üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ DrAsya Backend API
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ DrAsya Backend API..."
echo "================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..."
if command -v node >/dev/null 2>&1; then
    NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -ge 18 ]; then
        success "Node.js $(node -v) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        error "–¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 18+, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node -v)"
        exit 1
    fi
else
    error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+: https://nodejs.org/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
if command -v npm >/dev/null 2>&1; then
    success "npm $(npm -v) –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if command -v docker >/dev/null 2>&1; then
    success "Docker $(docker --version | cut -d' ' -f3 | cut -d',' -f1) –¥–æ—Å—Ç—É–ø–µ–Ω"
    DOCKER_AVAILABLE=true
else
    warning "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ë—É–¥–µ—Ç –∑–∞–ø—É—Å–∫ –±–µ–∑ Docker."
    DOCKER_AVAILABLE=false
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if command -v docker-compose >/dev/null 2>&1; then
    success "Docker Compose $(docker-compose --version | cut -d' ' -f3 | cut -d',' -f1) –¥–æ—Å—Ç—É–ø–µ–Ω"
    COMPOSE_AVAILABLE=true
else
    warning "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    COMPOSE_AVAILABLE=false
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if npm install; then
    success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f .env ]; then
    warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    if [ -f env.example ]; then
        cp env.example .env
        success "–°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ env.example"
        warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª–µ!"
    else
        error "env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
else
    success ".env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–∏—Å—Ç–µ–º–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
info "–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
if npm run check; then
    success "–°–∏—Å—Ç–µ–º–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
else
    warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø—É—Å–∫? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –∑–∞–ø—É—Å–∫–∞
echo ""
info "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞:"
echo "1) Docker Compose (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è) - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç PostgreSQL –∏ Redis"
echo "2) –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ - —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ PostgreSQL –∏ Redis"
echo "3) –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"

if [ "$DOCKER_AVAILABLE" = true ] && [ "$COMPOSE_AVAILABLE" = true ]; then
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3) [1]: " -n 1 -r
    echo
    CHOICE=${REPLY:-1}
else
    warning "Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫"
    CHOICE=2
fi

case $CHOICE in
    1)
        echo ""
        info "–ó–∞–ø—É—Å–∫ —Å Docker Compose..."
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏ Docker –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if ! docker network ls | grep -q asya-network; then
            docker network create asya-network || true
        fi
        
        # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
        if docker-compose up -d; then
            success "Docker —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
            
            # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
            echo ""
            info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
            sleep 10
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
            if docker-compose ps | grep -q "Up (healthy)"; then
                success "–°–µ—Ä–≤–∏—Å—ã –∑–¥–æ—Ä–æ–≤—ã"
            else
                warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤—ã"
            fi
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            echo ""
            info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
            sleep 5
            if docker-compose exec app npm run seed; then
                success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
            else
                warning "–í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –ë–î"
            fi
            
        else
            error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Docker —Å–µ—Ä–≤–∏—Å–æ–≤"
            exit 1
        fi
        ;;
        
    2)
        echo ""
        info "–õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
        if ! nc -z localhost 5432 2>/dev/null; then
            error "PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5432"
            echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Compose"
            exit 1
        else
            success "PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
        if ! nc -z localhost 6379 2>/dev/null; then
            warning "Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 6379"
            echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è"
        else
            success "Redis –¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        echo ""
        info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
        if npm run seed; then
            success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
        else
            warning "–í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –ë–î"
        fi
        
        # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        echo ""
        info "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        npm run start:dev &
        APP_PID=$!
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
        sleep 5
        ;;
        
    3)
        echo ""
        info "–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
        
        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ
        sleep 2
        ;;
        
    *)
        error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
for i in {1..30}; do
    if curl -f http://localhost:3000/health >/dev/null 2>&1; then
        success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!"
        break
    fi
    echo -n "."
    sleep 1
done

if ! curl -f http://localhost:3000/health >/dev/null 2>&1; then
    error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check"
    exit 1
fi

# –¢–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
if [ "$CHOICE" != "3" ]; then
    echo ""
    info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    if npm run test:security; then
        success "–¢–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"
    else
        warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    fi
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo "üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo "================================"
echo ""
success "üåê API —Å–µ—Ä–≤–µ—Ä: http://localhost:3000"
success "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:3000/api/docs"
success "‚ù§Ô∏è  Health Check: http://localhost:3000/health"
success "üìä –ú–µ—Ç—Ä–∏–∫–∏: http://localhost:3000/health/metrics"
echo ""

if [ "$CHOICE" = "1" ]; then
    info "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose down"
    info "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: docker-compose logs -f"
elif [ "$CHOICE" = "2" ]; then
    info "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: Ctrl+C"
    info "PID –ø—Ä–æ—Ü–µ—Å—Å–∞: $APP_PID"
fi

echo ""
info "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  npm run check          - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
echo "  npm run test:security  - —Ç–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "  npm run seed          - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–ª—é—á–µ–≤—ã—Ö endpoints
echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö endpoints..."

endpoints=(
    "/health:Health Check"
    "/tests/available:–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    "/api/docs:–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API"
)

for endpoint_info in "${endpoints[@]}"; do
    endpoint=$(echo $endpoint_info | cut -d':' -f1)
    description=$(echo $endpoint_info | cut -d':' -f2)
    
    if curl -f "http://localhost:3000$endpoint" >/dev/null 2>&1; then
        success "$description ($endpoint)"
    else
        warning "$description –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ($endpoint)"
    fi
done

echo ""
echo "‚ú® –ì–æ—Ç–æ–≤–æ! –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é."

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
if command -v open >/dev/null 2>&1; then  # macOS
    read -p "–û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        open http://localhost:3000/api/docs
    fi
elif command -v xdg-open >/dev/null 2>&1; then  # Linux
    read -p "–û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        xdg-open http://localhost:3000/api/docs
    fi
fi